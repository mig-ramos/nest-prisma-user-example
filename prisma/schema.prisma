// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// ****   Caso não tenha banco de dados ? npx prisma db pull : npx prisma generate    ****
// **** Alteração da tabela banco de dados ? npx prisma migrate dev --name <alteração> 
// **** E depois:   npx prisma generate

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  active     Boolean?  @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  @@map("admins")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  email      String       @unique
  password   String
  active     Boolean?     @default(true)
  role       Int          @default(1)
  created_at DateTime?    @default(now())
  updated_at DateTime?    @default(now())
  equipament Equipament[]

  @@map("users")
}

model Equipament {
  id         Int       @id @default(autoincrement())
  name       String
  sensorFS   String
  sensorBS   String
  sensorRS   String
  sensorLS   String
  active     Boolean?  @default(true)
  created_at DateTime? @default(now())
  updated_at DateTime? @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique

  @@map("equipaments")
}
